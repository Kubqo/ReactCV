[{"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\index.tsx":"1","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\App.tsx":"2","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Navbar.tsx":"3","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\SideBar.tsx":"4","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\About.tsx":"5","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Resume.tsx":"6","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Portfolio.tsx":"7","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Contact.tsx":"8","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\TimelinePC.tsx":"9","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\TimelineMobile.tsx":"10","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\GitRepos.tsx":"11","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\BottomBar.tsx":"12"},{"size":524,"mtime":1610648473959,"results":"13","hashOfConfig":"14"},{"size":814,"mtime":1610833607880,"results":"15","hashOfConfig":"14"},{"size":1063,"mtime":1610833791320,"results":"16","hashOfConfig":"14"},{"size":3444,"mtime":1610833630348,"results":"17","hashOfConfig":"14"},{"size":4073,"mtime":1610836601365,"results":"18","hashOfConfig":"14"},{"size":575,"mtime":1610836470359,"results":"19","hashOfConfig":"14"},{"size":3513,"mtime":1610831682935,"results":"20","hashOfConfig":"14"},{"size":2920,"mtime":1610800814459,"results":"21","hashOfConfig":"14"},{"size":5387,"mtime":1610801030946,"results":"22","hashOfConfig":"14"},{"size":5427,"mtime":1610836313533,"results":"23","hashOfConfig":"14"},{"size":393,"mtime":1610729503523,"results":"24","hashOfConfig":"14"},{"size":1232,"mtime":1610832997138,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1cii7l9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\index.tsx",[],["54","55"],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\App.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Navbar.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\SideBar.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\About.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Resume.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Portfolio.tsx",["56","57","58"],"import React, { useEffect, useState } from 'react'\r\nimport { getRepos } from \"./GitRepos\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CardActions, Grid, GridSpacing, makeStyles } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst Portfolio = () => {\r\n  const classes = useStyles();\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n  const [repos, setRepos] = useState<[]>([]);\r\n  const [des, setDes] = useState<[]>([]);\r\n  // const [isError, setIsError] = useState<boolean>(false);\r\n\r\n  const Fetch = async (username: string) => {\r\n    try {\r\n      const repos = await getRepos(username);\r\n      const Names = repos.map((element: { name: string }) => (element.name));\r\n      const descrip = repos.map((element: { description: string }) => (element.description));\r\n      \r\n      setRepos(Names);\r\n      setDes(descrip)\r\n      // setIsLoading(false);\r\n    } catch (err) {\r\n      // setIsError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Fetch(\"Kubqo\");\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'Tahoma, sans-serif' }} className=\"pt-40 text-center  md:mx-0\">\r\n      <b className=\"text-5xl text-gray-800\"> Portfolio </b>\r\n\r\n      {/* <div style={{ marginLeft: \"25%\" }} className=\"flex justify-between items-center w-1/2 pt-16\"></div> */}\r\n      <div className=\"p-16 flex justify-between items-center \">\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            {repos.map((name, index) => (\r\n              <div key={name} style={{ textAlign: \"center\" }} >\r\n                <Grid key={index} item>\r\n                  {/* //////////////////////////////////////////////////////////////////////////////////////////////////// */}\r\n                  <a key={name} href={`https://github.com/Kubqo/${name}`}>\r\n                  <Card style={{ backgroundColor: \"#1f2937\" }} className=\"block w-72 m-5 \">\r\n                    <CardActionArea>\r\n                      <CardContent style={{ minHeight: \"200px\" }}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"text-white\">\r\n                        <GitHubIcon className=\"mr-2 animate-pulse\" /> <b>{name}</b>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\" className=\"text-white pt-8\">\r\n                          {des[index]}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    {/* <CardActions>\r\n                      <a key={name} href={`https://github.com/Kubqo/${name}`}>\r\n                        <Button style={{ color: \"white\" }} size=\"small\" className=\" text-white pt-8 text-center \">\r\n                          <GitHubIcon className=\"mr-2\" />  Learn more on github\r\n                   </Button> </a>\r\n                    </CardActions> */}\r\n                  </Card>\r\n                  </a>\r\n                  {/* //////////////////////////////////////////////////////////////////////////////////////////////////// */}\r\n                </Grid>\r\n              </div>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Portfolio","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\Contact.tsx",["59","60","61","62"],"import React, { useEffect, useState } from 'react'\r\nimport { getRepos } from \"./GitRepos\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CardActions, Grid, GridSpacing } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\n\r\nconst Contact = () => {\r\n\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'Tahoma, sans-serif' }} className=\"pt-10 text-center \">\r\n      {/* <div style={{ marginLeft: \"25%\" }} className=\"flex justify-between items-center w-1/2 pt-16\"></div> */}\r\n      <div className=\"p-16 items-center \">\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n                  <Card style={{ backgroundColor: \"#1f2937\" }} className=\"pt-5 w-full m-5 md:w-1/2 md:pt-20\" >\r\n                    <CardActionArea>\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"text-white\">\r\n                        <b className=\" animate-pulse\" >Contact Me:</b>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\" className=\"text-white pt-8 \">\r\n                        <b>Brno, Czech Republic</b>\r\n\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\" className=\"text-white pt-8 \">\r\n\r\n                        <b>jakubduris1@gmail.com</b>\r\n                        \r\n                        <Typography variant=\"body2\" component=\"p\" className=\"text-white pt-8 \"></Typography>\r\n                        <a href = \"https://github.com/Kubqo\"><GitHubIcon className=\" mx-3 \"/></a>\r\n                        <a href = \"https://www.facebook.com/Kubqo1337/\"><FacebookIcon className=\" mx-3 \"/></a>\r\n                        <a href = \"https://www.linkedin.com/in/jakub-%C4%8Furi%C5%A1-786ba21a9/\"><LinkedInIcon className=\" mx-3 \"/></a>\r\n                         </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      {/* <a key={name} href={`https://github.com/Kubqo/${name}`}>\r\n                        <Button style={{ color: \"white\" }} size=\"small\" className=\" text-white pt-8 text-center \">\r\n                          <GitHubIcon className=\"mr-2\" />  Learn more on github\r\n                   </Button> </a> */}\r\n                    </CardActions>\r\n                  </Card>\r\n                  {/* //////////////////////////////////////////////////////////////////////////////////////////////////// */}\r\n                </Grid>\r\n          </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\TimelinePC.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\TimelineMobile.tsx",[],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\GitRepos.tsx",[],["63","64"],"C:\\Users\\jakub\\Development\\jd-tailwind\\src\\components\\BottomBar.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":7,"column":10,"nodeType":"71","messageId":"72","endLine":7,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":7,"column":29,"nodeType":"71","messageId":"72","endLine":7,"endColumn":40},{"ruleId":"69","severity":1,"message":"74","line":21,"column":9,"nodeType":"71","messageId":"72","endLine":21,"endColumn":16},{"ruleId":"69","severity":1,"message":"75","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"76","line":1,"column":28,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"69","severity":1,"message":"77","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":18},{"ruleId":"69","severity":1,"message":"73","line":7,"column":29,"nodeType":"71","messageId":"72","endLine":7,"endColumn":40},{"ruleId":"65","replacedBy":"78"},{"ruleId":"67","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'GridSpacing' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'getRepos' is defined but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]